@section Scripts {
    <script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
    <script src="~/signalr/hubs" type="text/javascript"></script>
}

@{
    ViewBag.Title = "TheNextChess";
}

<div>
    <h2>Online users:</h2>
    <ul id="online-users">

    </ul>
</div>
<div id="messages-wrapper">
    <ul id="messages">

    </ul>
</div>
<div id="invit_wrapper" style="display: none">
    <h2 id="invitation"></h2>
</div>
<div id="message-box" style="display: none">
    <input id="text" type="text" />
    <button>Send Message</button>
</div>

<table id="board">

</table>

<script>



    $(function () {

        $.connection.hub.start();

        let data;

        let game = $.connection.game;

        $('#message-box button').on('click', sendMessageToOponent);

        function sendMessageToOponent() {
            let message = $('#text');
            let oponentId = sessionStorage.getItem('oponentId');
            game.server.sendMessageToOponent(message.val(), oponentId);
            let listItem = $('<li>').text(`Me: ${message.val()}`);
            $('#messages').append(listItem);
            message.val('');

        }

        function recieveMessage(message, sender) {
            let myUsername = sessionStorage.getItem('username');
            let listItem = $('<li>').text(`${sender}: ${message}`);
            $('#messages').append(listItem);
        }

        function listUsers(users) {
            let ul = $('#online-users').empty();
            users = users.filter(x => x !== sessionStorage.getItem('username'));
            for (let user of users) {
                let listItem = $('<li>');
                let username = $('<p>').addClass('online-user').text(user);
                let inviteButton = $('<button>').text('Invite').on('click', function () {
                    game.server.invite(user);
                });

                listItem.append(username, inviteButton);
                ul.append(listItem);
            }
        }

        function removeUser(user) {
            $(`li:contains(${user})`).remove();
        }

        function recieveInvitation(host) {
            let invitation = $('#invitation').attr('data-conn-id', host.ConnectionId).text(`Invitation from ${host.Username}`);

            let button = $('<button>').text('Confirm').on('click', function () {
                sendConfirmation(invitation.attr('data-conn-id'));
            });

            $('#invit_wrapper').append(button);
            $('#invit_wrapper').show();

        }

        function sendConfirmation(hostId) {
            sessionStorage.setItem('oponentId', hostId);
            game.server.sendConfirmation(hostId);
        }

        function recieveConfirmation(user) {
            sessionStorage.setItem('oponentId', user.ConnectionId);
            let invitation = $('#invitation').attr('data-conn-id', user.ConnectionId).text(`Invitation confirmed from ${user.Username}`);
            $('#invit_wrapper').show();
        }

        function getMyUsername(username) {
            sessionStorage.setItem('username', username);
        }

        function hideInvitation() {
            $('#invit_wrapper').hide();
        }

        function startGame(board) {
            draw(board);
            showMessageBox();
            hideInvitation();
        }

        game.client.recieveMessage = recieveMessage;
        game.client.getMyUsername = getMyUsername;
        game.client.recieveConfirmation = recieveConfirmation;
        game.client.startGame = startGame;
        game.client.sendConfirmation = sendConfirmation;
        game.client.recieveInvitation = recieveInvitation;
        game.client.removeUser = removeUser;
        game.client.listUsers = listUsers;

    });

    function showMessageBox() {
        $('#message-box').show();
    }
    //TODO: Replace to drawer.js
    function draw(board) {
        for (var i = -1; i < board.length + 1; i++) {
            let row = $('<tr>');
            for (var j = -1; j < 9; j++) {
                let td = $('<td>').css('background-color', 'grey');
                if (i === -1 || i === board.length) {
                    if (j !== -1 && j !== 8) {
                        
                        td.text(`${String.fromCharCode('A'.charCodeAt(0) + j)}`)
                    }
                } else if (j === -1 || j === 8) {
                    td.text(8 - i);
                } else {

                    td.attr('id', `${i}-${j}`);

                    if (j % 2 == 0) {
                        if (i % 2 == 0) {
                            td.css('background-color', '#F1F1F1');
                        } else {
                            td.css('background-color', 'brown');
                        }
                    }
                    else {
                        if (i % 2 != 0) {
                            td.css('background-color', '#F1F1F1');
                        } else {
                            td.css('background-color', 'brown');
                        }
                    }

                    if (board[i][j] !== null && board[i][j] !== undefined) {

                        var color = board[i][j].Color == 0 ? "white" : "black";

                        let img = $(`<img src="../../Content/Images/${board[i][j].Name}-${color}.png" />`);
                        img.attr('id', `w-pawn-${j}`);
                        td.append(img);
                    }

                }



                row.append(td);
            }
            $('table#board').append(row);
        }
    }

</script>
